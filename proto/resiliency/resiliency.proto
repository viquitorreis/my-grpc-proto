syntax = "proto3";

package resiliency;

option go_package = "github.com/viquitorreis/my-grpc-proto/protogen/go/resiliency";

message ResiliencyRequest {
    int32 min_delay_second = 1 [json_name = "min_delay_second"];
    int32 max_delay_second = 2 [json_name = "max_delay_second"];
    repeated uint32 status_codes = 3 [json_name = "status_codes"];
}

message ResiliencyReponse {
    string dummy_string = 1 [json_name = "dummy_string"];
}

// status gRPC vai ser um dos status code listados na request
service ResiliencyService {
    rpc UnaryResiliency(ResiliencyRequest) returns (ResiliencyReponse);
    rpc ServerStreamResiliency(ResiliencyRequest) returns (stream ResiliencyReponse);
    rpc ClientStreamResiliency(stream ResiliencyRequest) returns (ResiliencyReponse);
    rpc BidirectionalStreamResiliency(stream ResiliencyRequest) returns (stream ResiliencyReponse);
}

// resiliency with metadata
service ResiliencyWithMetadataService {
    rpc UnaryResiliencyWithMetadata(ResiliencyRequest) returns (ResiliencyReponse);
    rpc ServerStreamResiliencyWithMetadata(ResiliencyRequest) returns (stream ResiliencyReponse);
    rpc ClientStreamResiliencyWithMetadata(stream ResiliencyRequest) returns (ResiliencyReponse);
    rpc BidirectionalStreamResiliencyWithMetadata(stream ResiliencyRequest) returns (stream ResiliencyReponse);
}